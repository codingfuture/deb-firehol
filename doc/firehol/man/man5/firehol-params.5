.TH firehol-params 5 "Built 15 Feb 2015" "FireHOL Reference" "2.0.1"
.nh
.SH NAME
.PP
firehol-params - optional rule parameters
.SH SYNOPSIS
.PP
\f[I]Common\f[]
.PP
{ src | src4 | src6 } [not] \f[I]host\f[]
.PP
{ dst | dst4 | dst6 } [not] \f[I]host\f[]
.PP
srctype [not] \f[I]type\f[]
.PP
dsttype [not] \f[I]type\f[]
.PP
proto [not] \f[I]protocol\f[]
.PP
mac [not] \f[I]macaddr\f[]
.PP
dscp [not] \f[I]value\f[] \f[I]class\f[] \f[I]classid\f[]
.PP
mark [not] \f[I]id\f[]
.PP
tos [not] \f[I]id\f[]
.PP
custom "\f[I]iptables-options\f[]..."
.PP
\f[I]Router Only\f[]
.PP
inface [not] \f[I]interface\f[]
.PP
outface [not] \f[I]interface\f[]
.PP
physin [not] \f[I]interface\f[]
.PP
physout [not] \f[I]interface\f[]
.PP
\f[I]Interface Only\f[]
.PP
uid [not] \f[I]user\f[]
.PP
gid [not] \f[I]group\f[]
.PP
\f[I]Logging\f[]
.PP
log "log text" [level \f[I]loglevel\f[]]
.PP
loglimit "log text" [level \f[I]loglevel\f[]]
.PP
\f[I]Other\f[]
.PP
sport \f[I]port\f[]
.PP
dport \f[I]port\f[]
.SH DESCRIPTION
.PP
Optional rule parameters are accepted by many commands to narrow the
match they make.
Not all parameters are accepted by all commands so you should check the
individual commands for exclusions.
.PP
All matches are made against the REQUEST.
FireHOL automatically sets up the necessary \ stateful rules to deal
with replies in the reverse direction.
.PP
Use the keyword \f[C]not\f[] to match any value other than the one(s)
specified.
.PP
The logging parameters are unusual in that they do not affect the match,
they just cause a log message to be emitted.
Therefore, the logging parameters don\[aq]t support the \f[C]not\f[]
option.
.PP
FireHOL is designed so that if you specify a parameter that is also used
internally by the command then a warning will be issued (and the
internal version will be used).
.SH COMMON
.SS src, dst
.PP
Use \f[C]src\f[] and \f[C]dst\f[] to define the source and destination
IP addresses of the request respectively.
\f[I]host\f[] defines the IP or IPs to be matched.
Examples:
.IP
.nf
\f[C]
server4\ smtp\ accept\ src\ not\ 192.0.2.1
server4\ smtp\ accept\ dst\ 198.51.100.1
server4\ smtp\ accept\ src\ not\ 192.0.2.1\ dst\ 198.51.100.1
server6\ smtp\ accept\ src\ not\ 2001:DB8:1::/64
server6\ smtp\ accept\ dst\ 2001:DB8:2::/64
server6\ smtp\ accept\ src\ not\ 2001:DB8:1::/64\ dst\ 2001:DB8:2::/64
\f[]
.fi
.PP
When attempting to create rules for both IPv4 and IPv6 it is generally
easier to use the \f[C]src4\f[], \f[C]src6\f[], \f[C]dst4\f[] and
\f[C]dst6\f[] pairs:
.IP
.nf
\f[C]
server46\ smtp\ accept\ src4\ 192.0.2.1\ src6\ 2001:DB8:1::/64
server46\ smtp\ accept\ dst4\ 198.51.100.1\ dst6\ 2001:DB8:2::/64
server46\ smtp\ accept\ dst4\ $d4\ dst6\ $d6\ src4\ not\ $d4\ src6\ not\ $s6
\f[]
.fi
.PP
To keep the rules sane, if one of the 4/6 pair specifies \f[C]not\f[],
then so must the other.
If you do not want to use both IPv4 and IPv6 addresses, you must specify
the rule as IPv4 or IPv6 only.
It is always possible to write a second IPv4 or IPv6 only rule.
.SS srctype, dsttype
.PP
Use \f[C]srctype\f[] or \f[C]dsttype\f[] to define the source or
destination IP address type of the request.
\f[I]type\f[] is the address type category as used in the kernel\[aq]s
network stack.
It can be one of:
.TP
.B UNSPEC
an unspecified address (i.e.
0.0.0.0)
.RS
.RE
.TP
.B UNICAST
a unicast address
.RS
.RE
.TP
.B LOCAL
a local address
.RS
.RE
.TP
.B BROADCAST
a broadcast address
.RS
.RE
.TP
.B ANYCAST
an anycast address
.RS
.RE
.TP
.B MULTICAST
a multicast address
.RS
.RE
.TP
.B BLACKHOLE
a blackhole address
.RS
.RE
.TP
.B UNREACHABLE
an unreachable address
.RS
.RE
.TP
.B PROHIBIT
a prohibited address
.RS
.RE
.TP
.B THROW; NAT; XRESOLVE
undocumented
.RS
.RE
.PP
See iptables(8) or run \f[C]iptables\ -m\ addrtype\ --help\f[] for more
information.
Examples:
.IP
.nf
\f[C]
server\ smtp\ accept\ srctype\ not\ "UNREACHABLE\ PROHIBIT"
\f[]
.fi
.SS proto
.PP
Use \f[C]proto\f[] to match by protocol.
The \f[I]protocol\f[] can be any accepted by iptables(8).
.SS mac
.PP
Use \f[C]mac\f[] to match by MAC address.
The \f[I]macaddr\f[] matches to the "remote" host.
In an \f[C]interface\f[], "remote" always means the non-local host.
In a \f[C]router\f[], "remote" refers to the source of requests for
\f[C]server\f[]s.
It refers to the destination of requests for \f[C]client\f[]s.
Examples:
.IP
.nf
\f[C]
\ #\ Only\ allow\ pop3\ requests\ to\ the\ e6\ host
\ client\ pop3\ accept\ mac\ 00:01:01:00:00:e6

\ #\ Only\ allow\ hosts\ other\ than\ e7/e8\ to\ access\ smtp
\ server\ smtp\ accept\ mac\ not\ "00:01:01:00:00:e7\ 00:01:01:00:00:e8"
\f[]
.fi
.SS dscp
.PP
Use \f[C]dscp\f[] to match the DSCP field on packets.
For details on DSCP values and classids, see
firehol-dscp(5).
.IP
.nf
\f[C]
\ server\ smtp\ accept\ dscp\ not\ "0x20\ 0x30"
\ server\ smtp\ accept\ dscp\ not\ class\ "BE\ EF"
\f[]
.fi
.SS mark
.PP
Use \f[C]mark\f[] to match marks set on packets.
For details on mark ids, see firehol-mark(5).
.IP
.nf
\f[C]
server\ smtp\ accept\ mark\ not\ "20\ 55"
\f[]
.fi
.SS tos
.PP
Use \f[C]tos\f[] to match the TOS field on packets.
For details on TOS ids, see firehol-tos(5).
.IP
.nf
\f[C]
server\ smtp\ accept\ tos\ not\ "Maximize-Throughput\ 0x10"
\f[]
.fi
.SS custom
.PP
Use \f[C]custom\f[] to pass arguments directly to iptables(8).
All of the parameters must be in a single quoted string.
To pass an option to iptables(8) that itself contains a space you need
to quote strings in the usual bash(1) manner.
For example:
.IP
.nf
\f[C]
server\ smtp\ accept\ custom\ "--some-option\ some-value"
server\ smtp\ accept\ custom\ "--some-option\ \[aq]some-value\ second-value\[aq]"
\f[]
.fi
.SH ROUTER ONLY
.SS inface, outface
.PP
Use \f[C]inface\f[] and \f[C]outface\f[] to define the
\f[I]interface\f[] via which a request is received and forwarded
respectively.
Use the same format as firehol-interface(5).
Examples:
.IP
.nf
\f[C]
server\ smtp\ accept\ inface\ not\ eth0
server\ smtp\ accept\ inface\ not\ "eth0\ eth1"
server\ smtp\ accept\ inface\ eth0\ outface\ eth1
\f[]
.fi
.SS physin, physout
.PP
Use \f[C]physin\f[] and \f[C]physout\f[] to define the physical
\f[I]interface\f[] via which a request is received or send in cases
where the inface or outface is known to be a virtual interface; e.g.
a bridge.
Use the same format as firehol-interface(5).
Examples:
.IP
.nf
\f[C]
server\ smtp\ accept\ physin\ not\ eth0
\f[]
.fi
.SH INTERFACE ONLY
.PP
These parameters match information related to information gathered from
the local host.
They apply only to outgoing packets and are silently ignored for
incoming requests and requests that will be forwarded.
.RS
.PP
\f[B]Note\f[]
.PP
The Linux kernel infrastructure to match PID/SID and executable names
with \f[C]pid\f[], \f[C]sid\f[] and \f[C]cmd\f[] has been removed so
these options can no longer be used.
.RE
.SS uid
.PP
Use \f[C]uid\f[] to match the operating system user sending the traffic.
The \f[I]user\f[] is a username, uid number or a quoted list of the two.
.PP
For example, to limit which users can access POP3 and IMAP by preventing
replies for certain users from being sent:
.IP
.nf
\f[C]
client\ "pop3\ imap"\ accept\ user\ not\ "user1\ user2\ user3"
\f[]
.fi
.PP
Similarly, this will allow all requests to reach the server but prevent
replies unless the web server is running as apache:
.IP
.nf
\f[C]
server\ http\ accept\ user\ apache
\f[]
.fi
.SS gid
.PP
Use \f[C]gid\f[] to match the operating system group sending the
traffic.
The \f[I]group\f[] is a group name, gid number or a quoted list of the
two.
.SH LOGGING
.SS log, loglimit
.PP
Use \f[C]log\f[] or \f[C]loglimit\f[] to log matching packets to syslog.
Unlike iptables(8) logging, this is not an action: FireHOL will produce
multiple iptables(8) commands to accomplish both the action for the rule
and the logging.
.PP
Logging is controlled using the FIREHOL_LOG_OPTIONS and
FIREHOL_LOG_LEVEL environment variables - see
firehol-variables(5).
\f[C]loglimit\f[] additionally honours the FIREHOL_LOG_FREQUENCY and
FIREHOL_LOG_BURST variables.
.PP
Specifying \f[C]level\f[] (which takes the same values as
FIREHOL_LOG_LEVEL) allows you to override the log level for a single
rule.
.SH LESSER USED PARAMETERS
.SS dport, sport
.PP
FireHOL also provides \f[C]dport\f[], \f[C]sport\f[] and \f[C]limit\f[]
which are used internally and rarely needed within configuration files.
.PP
\f[C]dport\f[] and \f[C]sport\f[] require an argument \f[I]port\f[]
which can be a name, number, range (FROM:TO) or a quoted list of ports.
.PP
For \f[C]dport\f[] \f[I]port\f[] specifies the destination port of a
request and can be useful when matching traffic to helper commands (such
as nat) where there is no implicit port.
.PP
For \f[C]sport\f[] \f[I]port\f[] specifies the source port of a request
and can be useful when matching traffic to helper commands (such as nat)
where there is no implicit port.
.SS limit
.PP
\f[C]limit\f[] requires the arguments \f[I]frequency\f[] and
\f[I]burst\f[] and will limit the matching of traffic in both
directions.
.SH SEE ALSO
.IP \[bu] 2
firehol(1) - FireHOL program
.IP \[bu] 2
firehol.conf(5) - FireHOL configuration
.IP \[bu] 2
firehol-server(5) - server, route commands
.IP \[bu] 2
firehol-client(5) - client command
.IP \[bu] 2
firehol-interface(5) - interface definition
.IP \[bu] 2
firehol-router(5) - router definition
.IP \[bu] 2
firehol-mark(5) - mark config helper
.IP \[bu] 2
firehol-tos(5) - tos config helper
.IP \[bu] 2
firehol-dscp(5) - dscp config helper
.IP \[bu] 2
firehol-variables(5) - control variables
.IP \[bu] 2
iptables(8) (http://ipset.netfilter.org/iptables.man.html) -
administration tool for IPv4 firewalls
.IP \[bu] 2
ip6tables(8) (http://ipset.netfilter.org/ip6tables.man.html) -
administration tool for IPv6 firewalls
.IP \[bu] 2
FireHOL Website (http://firehol.org/)
.IP \[bu] 2
FireHOL Online PDF Manual (http://firehol.org/firehol-manual.pdf)
.IP \[bu] 2
FireHOL Online HTML Manual (http://firehol.org/manual)
.SH AUTHORS
FireHOL Team.
